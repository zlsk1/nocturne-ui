@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

$switch-height: () !default;
$switch-height: map.merge(
  (
    'large': 40px,
    'default': 32px,
    'small': 24px
  ),
  $switch-height
);

$switch-font-size: () !default;
$switch-font-size: map.merge(
  (
    'large': 14px,
    'default': 14px,
    'small': 12px
  ),
  $switch-font-size
);

$switch-wrap-border-radius: () !default;
$switch-wrap-border-radius: map.merge(
  (
    'large': 12px,
    'default': 10px,
    'small': 8px
  ),
  $switch-wrap-border-radius
);

$switch-wrap-width: () !default;
$switch-wrap-width: map.merge(
  (
    'large': 50px,
    'default': 40px,
    'small': 30px
  ),
  $switch-wrap-width
);

$switch-wrap-height: () !default;
$switch-wrap-height: map.merge(
  (
    'large': 24px,
    'default': 20px,
    'small': 16px
  ),
  $switch-wrap-height
);

$switch-button-size: () !default;
$switch-button-size: map.merge(
  (
    'large': 20px,
    'default': 16px,
    'small': 12px
  ),
  $switch-button-size
);

$switch-content-padding: () !default;
$switch-content-padding: map.merge(
  (
    'large': 6px,
    'default': 4px,
    'small': 2px
  ),
  $switch-content-padding
);

@include b(switch) {
  @include set-component-css-var('switch', $switch);
}

@include b(switch) {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: map.get($switch-height, 'default');
  line-height: map.get($switch-wrap-height, 'default');
  font-size: map.get($switch-font-size, 'default');
  box-sizing: border-box;

  @include e(input) {
    position: absolute;
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
  }

  @include e(label) {
    display: inline-block;
    height: map.get($switch-wrap-height, 'default');
    font-size: map.get($switch-font-size, 'default');
    font-weight: 500;
    color: getCssVar('text-color', 'primary');
    transition: getCssVar('transition-duration-fast');
    cursor: pointer;

    @include when(active) {
      color: getCssVar('color-primary');
    }

    @include m(left) {
      margin-right: 10px;
    }

    @include m(right) {
      margin-left: 10px;
    }

    & * {
      display: inline-block;
      line-height: 1;
      font-size: map.get($switch-font-size, 'default');
    }

    .#{$namespace}-icon {
      height: inherit;

      svg {
        vertical-align: middle;
        flex-shrink: 0;
      }
    }
  }

  @include e(wrap) {
    position: relative;
    display: flex;
    align-items: center;
    min-width: 40px;
    height: 20px;
    background-color: getCssVar('switch-off-color');
    border: 1px solid
      var(
        #{getCssVarName('switch-border-color')},
        #{getCssVar('switch-off-color')}
      );
    border-radius: map.get($switch-wrap-border-radius, 'default');
    outline: none;
    box-sizing: border-box;
    cursor: pointer;
    transition:
      border-color getCssVar('transition-duration'),
      background-color getCssVar('transition-duration');

    .#{$namespace}-switch__action {
      position: absolute;
      left: 1px;
      top: 1px;
      display: flex;
      justify-content: center;
      align-items: center;
      width: map.get($switch-button-size, 'default');
      height: map.get($switch-button-size, 'default');
      color: getCssVar('switch-off-color');
      background-color: getCssVar('color-white');
      border-radius: getCssVar('border-radius-circle');
      transition: all getCssVar('transition-duration');

      &--text {
        color: #fff;
        margin-right: 3px;
        margin-left: 0;
      }
    }

    .#{$namespace}-switch__action--reverse {
      width: 100%;
      height: 100%;
      vertical-align: middle;
      padding: 0 map.get($switch-content-padding, 'default') 0
        calc(map.get($switch-button-size, 'default') + 2px);
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      color: getCssVar('color-white');
      border-radius: getCssVar('border-radius-circle');
      transition: all getCssVar('transition-duration');

      span {
        user-select: none;
      }
    }
  }

  @include when(checked) {
    .#{$namespace}-switch__wrap {
      border-color: var(
        #{getCssVarName('switch-border-color')},
        #{getCssVar('switch-on-color')}
      );
      background-color: getCssVar('switch-on-color');

      .#{$namespace}-switch__action {
        left: calc(100% - #{map.get($switch-button-size, 'default') + 1px});
        color: getCssVar('switch-on-color');
      }

      .#{$namespace}-switch__action--reverse {
        padding: 0 calc(map.get($switch-button-size, 'default') + 2px) 0
          map.get($switch-content-padding, 'default');
      }

      .#{$namespace}-switch__action--text {
        color: #fff;
        margin-left: 3px;
        margin-right: 0;
      }
    }
  }

  @include when(disabled) {
    opacity: 0.6;

    & .#{$namespace}-switch__wrap,
    & .#{$namespace}-switch__label {
      cursor: not-allowed;
    }
  }

  @each $size in (large, small) {
    @include m($size) {
      font-size: map.get($switch-font-size, $size);
      line-height: map.get($switch-wrap-height, $size);
      height: map.get($switch-height, $size);

      @include e(label) {
        height: map.get($switch-wrap-height, $size);
        font-size: map.get($switch-font-size, $size);

        & * {
          font-size: map.get($switch-font-size, $size);
        }
      }

      @include e(wrap) {
        min-width: map.get($switch-wrap-width, $size);
        height: map.get($switch-wrap-height, $size);
        border-radius: map.get($switch-wrap-border-radius, $size);

        .#{$namespace}-switch__inner {
          height: map.get($switch-button-size, $size);
          padding: 0 #{map.get($switch-content-padding, $size)} 0 calc(#{map.get(
                  $switch-button-size,
                  $size
                )} + 2px);
        }

        .#{$namespace}-switch__action {
          width: map.get($switch-button-size, $size);
          height: map.get($switch-button-size, $size);
        }

        .#{$namespace}-switch__action--reverse {
          padding: 0 map.get($switch-content-padding, $size) 0
            calc(map.get($switch-button-size, $size) + 2px);
        }
      }

      @include when(checked) {
        .#{$namespace}-switch__wrap {
          .#{$namespace}-switch__action {
            left: calc(100% - #{map.get($switch-button-size, $size) + 1px});
          }

          .#{$namespace}-switch__action--reverse {
            padding: 0 calc(map.get($switch-button-size, $size) + 2px) 0
              map.get($switch-content-padding, $size);
          }

          .#{$namespace}-switch__inner {
            padding: 0 calc(#{map.get($switch-button-size, $size)} + 2px) 0 #{map.get(
                $switch-content-padding,
                $size
              )};
          }
        }
      }
    }
  }
}
