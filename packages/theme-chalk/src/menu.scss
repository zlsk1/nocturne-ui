@use 'common/var' as *;
@use 'mixins/mixins' as *;
@use 'mixins/var' as *;

$sub-selector: #{$namespace}-sub-menu;
$item-selector: #{$namespace}-menu-item;

@include b(menu) {
  @include set-component-css-var('menu', $menu);
}
@include b(menu-item) {
  @include set-component-css-var('menu', $menu);
}
@include b(sub-menu) {
  @include set-component-css-var('menu', $menu);
}

@include b(menu) {
  position: relative;
  display: flex;
  width: 100%;
  height: getCssVar('menu', 'title-height');
  margin: 0;
  padding-left: 0;
  font-size: 14px;
  color: getCssVar('menu', 'text-color');
  user-select: none;
  box-sizing: border-box;
  transition:
    width getCssVar('transition-duration'),
    height getCssVar('transition-duration');

  @include when(horizontal) {
    position: relative;
    border-bottom: 1px solid getCssVar('border-color-lighter');

    .#{$sub-selector}--container {
      padding: getCssVar('menu', 'item-padding');
    }

    .#{$item-selector},
    .#{$sub-selector}--container {
      margin: 0;
    }

    .#{$sub-selector}--title,
    .#{$item-selector} {
      &:hover {
        background: inherit;
      }
      @include when(selected) {
        background: inherit;
      }
    }

    .#{$item-selector}--title {
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        opacity: 0;
        border-bottom-width: 2px;
        border-bottom-style: solid;
        border-bottom-color: getCssVar('color-primary');
        transition: opacity getCssVar('transition-duration-fast') ease-in-out;
      }
    }

    .#{$item-selector} {
      @include when(selected) {
        .#{$item-selector}--title {
          &::after {
            opacity: 1;
          }
        }
      }

      @include when(disabled) {
        &:hover {
          .#{$item-selector}--title {
            &::after {
              opacity: 0;
            }
          }
        }
      }
    }

    .#{$sub-selector}--title {
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        opacity: 0;
        border-bottom-width: 2px;
        border-bottom-style: solid;
        border-bottom-color: getCssVar('color-primary');
        transition: opacity getCssVar('transition-duration-fast') ease-in-out;
      }

      &:hover {
        &::after {
          opacity: 1;
        }
      }

      @include when(selected) {
        &::after {
          opacity: 1;
        }
      }
    }
  }

  @include when(vertical) {
    display: block;
    padding: 4px;
    border-right: 1px solid getCssVar('border-color-light');

    .#{$sub-selector}--container {
      border-radius: getCssVar('border-radius-base');
      overflow: hidden;
      @include when(selected) {
        background: getCssVar('menu', 'selected-bg');
      }
    }

    .#{$sub-selector}--title {
      padding: getCssVar('menu', 'item-padding');
    }
  }

  @include when(collapse) {
    @include when(vertical) {
      width: 80px;
      .#{$item-selector} {
        display: block;
        padding: 0;
      }
      .#{$item-selector}--title {
        display: block;
        padding: 0 calc(50% - calc(getCssVar('menu-collapse-icon-size') / 2));
        text-overflow: clip;
        line-height: getCssVar('menu', 'title-height');
        > svg,
        > .n-icon {
          vertical-align: middle;
          margin-right: 0;
        }
      }
      .#{$item-selector}--title-label {
        opacity: 0;
      }
      .#{$sub-selector}--title {
        display: block;
        padding: 0 calc(50% - calc(getCssVar('menu-collapse-icon-size') / 2));
        text-overflow: clip;
        line-height: getCssVar('menu', 'title-height');

        > svg {
          vertical-align: middle;
        }
      }
      .#{$sub-selector}--title-label {
        > span {
          opacity: 0;
        }
      }
      .#{$sub-selector}__arrow {
        opacity: 0;
      }
    }
  }

  ul {
    margin: 0;
    padding-left: 0;
  }

  li {
    list-style: none;
  }
}

@include b(menu-item) {
  box-sizing: border-box;
  height: getCssVar('menu', 'title-height');
  line-height: getCssVar('menu', 'title-height');
  margin: getCssVar('menu', 'item-margin');
  padding: getCssVar('menu', 'item-padding');
  border-radius: getCssVar('border-radius-base');
  transition: all getCssVar('transition-duration');
  cursor: pointer;

  &:hover {
    background: getCssVar('menu', 'hover-bg');
    .#{$item-selector}--title {
      &::after {
        opacity: 1;
      }
    }
  }

  &:active {
    background: getCssVar('menu', 'selected-bg');
  }

  @include m(title) {
    position: relative;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: start;
    white-space: nowrap;
    transition: padding getCssVar('transition-duration-fast');
  }

  @include m(title-label) {
    opacity: 1;
    transition: opacity getCssVar('transition-duration-fast');
  }

  @include m(title-icon) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
    font-size: getCssVar('menu-icon-size');
    transition: font-size getCssVar('transition-duration');

    @include when('collapse') {
      font-size: getCssVar('menu-collapse-icon-size');
    }
  }

  .#{$item-selector}--title-icon + .#{$item-selector}--title-label {
    margin-left: 6px;
  }

  @include e(arrow) {
    margin-left: 5px;
    transition: transform getCssVar('transition-duration');
  }

  @include when(collapse) {
    > span {
      width: 0;
      height: 0;
      overflow: hidden;
      opacity: 0;
    }
  }

  @include when(selected) {
    color: getCssVar('menu', 'selected-color');
    background: getCssVar('menu', 'selected-bg');
  }

  @include when(disabled) {
    color: getCssVar('text-color-disabled');
    background: none;
    cursor: not-allowed;
  }
}

.#{$namespace}-popper.#{$namespace}-menu-item--popper {
  font-size: 14px;
}

@mixin arrow {
  @include e(arrow) {
    position: absolute;
    top: 50%;
    right: 15px;
    font-size: 16px;
    transform: translateY(-50%);
    > svg {
      transition: transform getCssVar('transition-duration');
    }
  }
}

@include b(sub-menu) {
  @include m(container) {
    box-sizing: border-box;
    margin: getCssVar('menu', 'item-margin');

    @include when(disabled) {
      .#{$sub-selector}--title {
        color: getCssVar('text-color-disabled');
        background: none;
        cursor: not-allowed;

        &:hover {
          color: getCssVar('text-color-disabled');
          background: none;
        }
      }
    }

    @include arrow;
  }

  @include m(title) {
    position: relative;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: start;
    height: getCssVar('menu', 'title-height');
    white-space: nowrap;
    border-radius: getCssVar('border-radius-base');
    transition:
      background getCssVar('transition-duration'),
      color getCssVar('transition-duration'),
      padding getCssVar('transition-duration-fast');
    cursor: pointer;

    &:hover:not(.is-selected) {
      color: getCssVar('menu', 'text-color');
      background: getCssVar('fill-color-dark');
    }

    &:active {
      color: getCssVar('menu', 'selected-color');
      background: getCssVar('menu', 'selected-bg');
    }

    @include when(collapse) {
      > span {
        width: 0;
        height: 0;
        overflow: hidden;
        opacity: 0;
      }
    }

    @include when(selected) {
      color: getCssVar('menu', 'selected-color');
    }
  }

  @include m(title-label) {
    opacity: 1;
    transition: opacity getCssVar('transition-duration-fast');

    > span {
      margin-left: 6px;
    }

    .#{$namespace}-icon {
      font-size: getCssVar('menu-icon-size');
      transition: font-size getCssVar('transition-duration');
    }

    @include when(collapse) {
      .#{$namespace}-icon {
        font-size: getCssVar('menu-collapse-icon-size');
      }
    }
  }

  @include arrow;

  @include m(title-icon) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;

    &:only-child {
      flex: 1;
    }
  }
}

.#{$namespace}-popper.#{$namespace}-sub-menu--popper {
  padding: 0 2px !important;
  font-size: 14px;
  border-radius: getCssVar('border-radius-large');
  user-select: none;
  @include set-component-css-var('menu', $menu);

  .#{$sub-selector}--title {
    padding: getCssVar('menu', 'item-padding');
  }

  ul {
    margin: 0;
    padding-left: 0;
  }

  ul,
  li {
    list-style: none;
  }
}

@include b(menu-group) {
  line-height: getCssVar('menu', 'title-height');

  @include m(title) {
    padding: getCssVar('menu', 'item-padding');
    font-size: 14px;
    color: getCssVar('text-color-placeholder');
  }

  .#{$item-selector}--title {
    padding-left: 18px;
  }

  .#{$sub-selector} {
    padding: getCssVar('menu', 'item-padding');
  }
}
