@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

$control-width: () !default;
$control-width: map.merge(
  (
    'large': 40px,
    'default': 32px,
    'small': 24px
  ),
  $control-width
);

@mixin inset-prepend-border($color) {
  box-shadow:
    1px 0 0 0 $color inset,
    0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset;
}

@mixin inset-append-border($color) {
  box-shadow:
    0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset,
    -1px 0 0 0 $color inset;
}

@mixin inset-prepend-input-border($color) {
  box-shadow:
    1px 0 0 0 $color inset,
    1px 0 0 0 $color,
    0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset !important;
}

@mixin inset-append-input-border($color) {
  box-shadow:
    -1px 0 0 0 $color,
    -1px 0 0 0 $color inset,
    0 1px 0 0 $color inset,
    0 -1px 0 0 $color inset !important;
}

@include b(input-number) {
  @include set-component-css-var(input-number, $input-number);
  @include set-component-css-var(input-number-width, $input-number-width);
  position: relative;
  display: inline-flex;
  width: getCssVar('input-number-width');
  line-height: 30px;
  text-align: center;

  @include when(disabled) {
    span {
      cursor: not-allowed;
      color: getCssVar('disabled-text-color');

      &:hover {
        color: getCssVar('disabled-text-color');
      }
    }

    @include e(control) {
      cursor: not-allowed;
      color: getCssVar('disabled-text-color');

      &:hover {
        color: getCssVar('disabled-text-color');
      }
    }
  }

  @include e(control) {
    box-sizing: border-box;
    position: absolute;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: getCssVar('input-number-control-w');
    color: getCssVar('input-number-control-color');
    background: getCssVar('input-number-control-bg');
    transition:
      color 0.1s,
      height getCssVar('transition-duration') ease-in-out;
    z-index: 1;
    cursor: pointer;

    &:hover {
      color: getCssVar('color-primary');
      ~ .#{$namespace}-input:not(.is-disabled) {
        .#{$namespace}-input--wrapper {
          box-shadow: 0 0 0 1px getCssVar('color-primary') inset;
        }
      }
    }
  }

  @include e(control--increase) {
    box-sizing: border-box;
    top: 1px;
    right: 1px;
    height: calc(50% - 1px);
    border-left: 1px solid getCssVar('border-color');
    border-radius: 0 getCssVar('border-radius-base') 0 0;

    @include when(exceed) {
      cursor: not-allowed;
    }
  }

  @include e(control--decrease) {
    bottom: 1px;
    right: 1px;
    height: calc(50% - 1px);
    border-radius: 0 0 getCssVar('border-radius-base') 0;
    border-top: 1px solid getCssVar('border-color');
    border-left: 1px solid getCssVar('border-color');

    @include when(exceed) {
      cursor: not-allowed;
    }
  }

  @include m(inner) {
    @include e(control--increase) {
      &:hover {
        height: calc(60% - 1px);
        + .#{$namespace}-input-number__control--decrease {
          height: calc(40% - 1px);
        }
      }
    }
    @include e(control--decrease) {
      &:hover {
        height: calc(60% - 1px);
        &:has(~ .#{$namespace}-input-number__control--increase) {
          height: calc(40% - 1px);
        }
      }
    }

    .#{$namespace}-input {
      &--wrapper {
        padding-right: getCssVar('input-number-control-w');
      }
    }
  }

  @include m(outter) {
    @include e(control--decrease) {
      top: 1px;
      left: 1px;
      height: calc(100% - 2px);
      border-top: none;
      border-left: none;
      border-right: getCssVar(border);
      border-radius: getCssVar('border-radius-base') 0 0
        getCssVar('border-radius-base');
    }

    @include e(control--increase) {
      right: 1px;
      height: calc(100% - 2px);
      border-left: getCssVar(border);
      border-radius: 0 getCssVar('border-radius-base')
        getCssVar('border-radius-base') 0;
    }

    .#{$namespace}-input {
      &__inner {
        text-align: center;
      }
    }
  }

  .#{$namespace}-input {
    &__inner {
      text-align: center;
      -webkit-appearance: none;
      -moz-appearance: textfield;
      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        margin: 0;
        -webkit-appearance: none;
      }
    }
  }

  @each $size in large, small {
    @include m($size) {
      width: getCssVar('input-number-width', $size);

      &__control {
        width: getCssVar('control-width', $size);
      }
    }
  }
}
