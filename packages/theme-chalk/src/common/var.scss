@use 'sass:math';
@use 'sass:map';

@use '../mixins/function.scss' as *;
@forward '../mixins/function.scss';

$types: primary, success, warning, danger, error, info;

$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #0080ff
    ),
    'success': (
      'base': #60ca2b
    ),
    'warning': (
      'base': #ff8a0d
    ),
    'danger': (
      'base': #f46262
    ),
    'error': (
      'base': #f46262
    ),
    'info': (
      'base': #64748b
    )
  ),
  $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          )
      )
    ),
    $colors
  ) !global;
}

@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

@each $type in $types {
  @include set-color-mix-level($type, 2, 'dark', $color-black);
}

$text-color-base: #000;
$text-color: () !default;
$text-color: map.merge(
  (
    'primary': rgba($text-color-base, 0.86),
    'regular': rgba($text-color-base, 0.65),
    'secondary': rgba($text-color-base, 0.55),
    'placeholder': rgba($text-color-base, 0.45),
    'disabled': rgba($text-color-base, 0.25)
  ),
  $text-color
);

$border-color: () !default;
$border-color: map.merge(
  (
    '': #dcdfe6,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
    'dark': #d4d7de,
    'darker': #cdd0d6
  ),
  $border-color
);

$fill-color: () !default;
$fill-color: map.merge(
  (
    '': #f0f2f5,
    'light': #f5f7fa,
    'lighter': #fafafa,
    'extra-light': #fafcff,
    'dark': #ebedf0,
    'darker': #e6e8eb,
    'blank': #ffffff
  ),
  $fill-color
);

$bg-color: () !default;
$bg-color: map.merge(
  (
    '': #ffffff,
    'page': #f2f3f5,
    'overlay': #ffffff
  ),
  $bg-color
);

$border-width: 1px !default;
$border-style: solid !default;
$border-color-hover: getCssVar('text-color', 'disabled') !default;

$border-radius: () !default;
$border-radius: map.merge(
  (
    'base': 6px,
    'small': 4px,
    'large': 8px,
    'round': 20px,
    'circle': 100%
  ),
  $border-radius
);

$box-shadow: () !default;
$box-shadow: map.merge(
  (
    '': (
      0px 12px 32px 4px rgba(0, 0, 0, 0.04),
      0px 8px 20px rgba(0, 0, 0, 0.08)
    ),
    'light': (
      0px 0px 12px rgba(0, 0, 0, 0.12)
    ),
    'lighter': (
      0px 0px 6px rgba(0, 0, 0, 0.12)
    ),
    'dark': (
      0px 16px 48px 16px rgba(0, 0, 0, 0.08),
      0px 12px 32px rgba(0, 0, 0, 0.12),
      0px 8px 16px -8px rgba(0, 0, 0, 0.16)
    )
  ),
  $box-shadow
);

$font-family: () !default;
$font-family: map.merge(
  (
    '':
      "'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', Arial, sans-serif"
  ),
  $font-family
);

$font-size: () !default;
$font-size: map.merge(
  (
    'extra-large': 20px,
    'large': 18px,
    'medium': 16px,
    'base': 14px,
    'small': 13px,
    'extra-small': 12px
  ),
  $font-size
);

$z-index: () !default;
$z-index: map.merge(
  (
    'normal': 1,
    'top': 1000,
    'popper': 2000
  ),
  $z-index
);

$disabled: () !default;
$disabled: map.merge(
  (
    'bg-color': getCssVar('fill-color', 'light'),
    'text-color': getCssVar('text-color', 'placeholder'),
    'border-color': getCssVar('border-color', 'light')
  ),
  $disabled
);

$common-component-size: () !default;
$common-component-size: map.merge(
  (
    'large': 40px,
    'default': 32px,
    'small': 24px
  ),
  $common-component-size
);

$overlay-color: () !default;
$overlay-color: map.merge(
  (
    '': rgba(0, 0, 0, 0.8),
    'light': rgba(0, 0, 0, 0.7),
    'lighter': rgba(0, 0, 0, 0.5)
  ),
  $overlay-color
);

$mask-color: () !default;
$mask-color: map.merge(
  (
    '': rgba(255, 255, 255, 0.9),
    'extra-light': rgba(255, 255, 255, 0.3)
  ),
  $mask-color
);

$transition: () !default;
$transition: map.merge(
  (
    'all': all getCssVar('transition-duration')
      getCssVar('transition-function-ease-in-out-bezier'),
    'fade': opacity getCssVar('transition-duration')
      getCssVar('transition-function-fast-bezier'),
    'md-fade': (
      transform getCssVar('transition-duration')
        getCssVar('transition-function-fast-bezier'),
      opacity getCssVar('transition-duration')
        getCssVar('transition-function-fast-bezier')
    ),
    'fade-linear': opacity getCssVar('transition-duration-fast') linear,
    'border': border-color getCssVar('transition-duration-fast')
      getCssVar('transition-function-ease-in-out-bezier'),
    'box-shadow': box-shadow getCssVar('transition-duration-fast')
      getCssVar('transition-function-ease-in-out-bezier'),
    'color': color getCssVar('transition-duration-fast')
      getCssVar('transition-function-ease-in-out-bezier')
  ),
  $transition
);

$transition-duration: () !default;
$transition-duration: map.merge(
  (
    '': 0.3s,
    'fast': 0.2s
  ),
  $transition-duration
);

$transition-function: () !default;
$transition-function: map.merge(
  (
    'ease-in-out-bezier': cubic-bezier(0.645, 0.045, 0.355, 1),
    'fast-bezier': cubic-bezier(0.23, 1, 0.32, 1)
  ),
  $transition-function
);

$sm: 768px !default;
$md: 992px !default;
$lg: 1200px !default;
$xl: 1920px !default;

$breakpoints: (
  'xs': '(max-width: #{$sm - 1})',
  'sm': '(min-width: #{$sm})',
  'md': '(min-width: #{$md})',
  'lg': '(min-width: #{$lg})',
  'xl': '(min-width: #{$xl})'
) !default;

$breakpoints-spec: (
  'xs-only': '(max-width: #{$sm - 1})',
  'sm-and-up': '(min-width: #{$sm})',
  'sm-only': '(min-width: #{$sm}) and (max-width: #{$md - 1})',
  'sm-and-down': '(max-width: #{$md - 1})',
  'md-and-up': '(min-width: #{$md})',
  'md-only': '(min-width: #{$md}) and (max-width: #{$lg - 1})',
  'md-and-down': '(max-width: #{$lg - 1})',
  'lg-and-up': '(min-width: #{$lg})',
  'lg-only': '(min-width: #{$lg}) and (max-width: #{$xl - 1})',
  'lg-and-down': '(max-width: #{$xl - 1})',
  'xl-only': '(min-width: #{$xl})'
) !default;

//Component

$button: () !default;
$button: map.merge(
  (
    'font-weight': getCssVar('font-weight-primary'),
    'border-color': getCssVar('border-color'),
    'bg-color': getCssVar('fill-color', 'blank'),
    'text-color': getCssVar('text-color', 'regular'),
    'disabled-text-color': getCssVar('disabled-text-color'),
    'disabled-bg-color': getCssVar('fill-color', 'blank'),
    'disabled-border-color': getCssVar('border-color-light'),
    'divide-border-color': rgba($color-white, 0.5),
    'hover-text-color': getCssVar('color-primary'),
    'hover-bg-color': getCssVar('color-primary', 'light-9'),
    'hover-border-color': getCssVar('color-primary-light-7'),
    'active-text-color': getCssVar('button-hover-text-color'),
    'active-border-color': getCssVar('color-primary'),
    'active-bg-color': getCssVar('button', 'hover-bg-color'),
    'outline-color': getCssVar('color-primary', 'light-5'),
    'hover-link-text-color': getCssVar('color-info'),
    'active-color': getCssVar('text-color', 'primary')
  ),
  $button
);

$button-border-width: $border-width !default;

// need mix, so do not use css var
$button-hover-tint-percent: 20%;
$button-active-shade-percent: 10%;

$button-border-color: () !default;
$button-bg-color: () !default;
$button-text-color: () !default;

@each $type in $types {
  $button-border-color: map.merge(
    (
      $type: map.get($colors, $type, 'base')
    ),
    $button-border-color
  ) !global;

  $button-bg-color: map.merge(
    (
      $type: map.get($colors, $type, 'base')
    ),
    $button-bg-color
  ) !global;
}

$button-font-size: () !default;
$button-font-size: map.merge(
  (
    'large': getCssVar('font-size', 'base'),
    'default': getCssVar('font-size', 'base'),
    'small': 12px
  ),
  $button-font-size
);

$button-border-radius: () !default;
$button-border-radius: map.merge(
  (
    'large': getCssVar('border-radius', 'base'),
    'default': getCssVar('border-radius', 'base'),
    'small': calc(#{getCssVar('border-radius', 'base')} - 1px)
  ),
  $button-border-radius
);

$button-padding-vertical: () !default;
$button-padding-vertical: map.merge(
  (
    'large': 13px,
    'default': 9px,
    'small': 6px
  ),
  $button-padding-vertical
);

$button-padding-horizontal: () !default;
$button-padding-horizontal: map.merge(
  (
    'large': 20px,
    'default': 16px,
    'small': 12px
  ),
  $button-padding-horizontal
);

$input: () !default;
$input: map.merge(
  (
    'text-color': getCssVar('text-color-regular'),
    'border': getCssVar('border'),
    'hover-border': getCssVar('border-color-hover'),
    'focus-border': getCssVar('color-primary'),
    'transparent-border': 0 0 0 1px transparent inset,
    'border-color': getCssVar('border-color'),
    'border-radius': getCssVar('border-radius-base'),
    'bg-color': getCssVar('fill-color', 'blank'),
    'icon-color': getCssVar('text-color-placeholder'),
    'placeholder-color': getCssVar('text-color-placeholder'),
    'hover-border-color': getCssVar('border-color-hover'),
    'clear-hover-color': getCssVar('text-color-secondary'),
    'focus-border-color': getCssVar('color-primary'),
    'width': 100%
  ),
  $input
);

$input-disabled: () !default;
$input-disabled: map.merge(
  (
    'fill': getCssVar('disabled-bg-color'),
    'border': getCssVar('disabled-border-color'),
    'text-color': getCssVar('disabled-text-color'),
    'placeholder-color': getCssVar('text-color-placeholder')
  ),
  $input-disabled
);

$input-font-size: () !default;
$input-font-size: map.merge(
  (
    'large': 14px,
    'default': 14px,
    'small': 12px
  ),
  $input-font-size
);

$input-height: () !default;
$input-height: map.merge($common-component-size, $input-height);

$input-line-height: () !default;
$input-line-height: map.merge($common-component-size, $input-line-height);

$input-number-width: () !default;
$input-number-width: map.merge(
  (
    'large': 180px,
    'default': 150px,
    'small': 120px
  ),
  $input-number-width
);

$input-number: () !default;
$input-number: map.merge(
  (
    'control-color': getCssVar('text-color-secondary'),
    'control-bg': getCssVar('fill-color-light'),
    'control-w': 32px
  ),
  $input-number-width
);

$input-padding-horizontal: () !default;
$input-padding-horizontal: map.merge(
  (
    'large': 16px,
    'default': 12px,
    'small': 8px
  ),
  $input-padding-horizontal
);

$switch: () !default;
$switch: map.merge(
  (
    'on-color': getCssVar('color-primary'),
    'off-color': getCssVar('border-color')
  ),
  $switch
);

$radio: () !default;
$radio: map.merge(
  (
    'font-size': getCssVar('font-size-base'),
    'text-color': getCssVar('text-color-regular'),
    'font-weight': getCssVar('font-weight-primary'),
    'input-height': 14px,
    'input-width': 14px,
    'input-border-radius': getCssVar('border-radius-circle'),
    'input-bg-color': getCssVar('fill-color', 'blank'),
    'input-border': getCssVar('border'),
    'input-border-color': getCssVar('border-color'),
    'input-border-color-hover': getCssVar('color-primary')
  ),
  $radio
);

$radio-height: () !default;
$radio-height: map.merge($common-component-size, $radio-height);

$radio-button: () !default;
$radio-button: map.merge(
  (
    'checked-bg-color': getCssVar('color-primary'),
    'checked-text-color': getCssVar('color-white'),
    'checked-border-color': getCssVar('color-primary'),
    'disabled-checked-fill': getCssVar('border-color-extra-light')
  ),
  $radio-button
);

$radio-disabled: () !default;
$radio-disabled: map.merge(
  (
    'input-border-color': getCssVar('disabled-border-color'),
    'input-fill': getCssVar('disabled-bg-color'),
    'icon-color': getCssVar('disabled-bg-color'),
    'checked-input-border-color': getCssVar('disabled-border-color'),
    'checked-input-fill': getCssVar('disabled-bg-color'),
    'checked-icon-color': getCssVar('text-color-placeholder')
  ),
  $radio-disabled
);

$radio-checked: () !default;
$radio-checked: map.merge(
  (
    'text-color': getCssVar('color-primary'),
    'input-border-color': getCssVar('color-primary'),
    'icon-color': getCssVar('color-primary')
  ),
  $radio-checked
);

$radio-bordered-input-height: () !default;
$radio-bordered-input-height: map.merge(
  (
    'large': 14px,
    'default': 12px,
    'small': 12px
  ),
  $radio-bordered-input-height
);

$radio-bordered-input-width: () !default;
$radio-bordered-input-width: map.merge(
  (
    'large': 14px,
    'default': 12px,
    'small': 12px
  ),
  $radio-bordered-input-width
);

$checkbox: () !default;
$checkbox: map.merge(
  (
    'font-size': 14px,
    'font-weight': getCssVar('font-weight-primary'),
    'text-color': getCssVar('text-color-regular'),
    'input-height': 14px,
    'input-width': 14px,
    'border-radius': getCssVar('border-radius-small'),
    'bg-color': getCssVar('fill-color', 'blank'),
    'input-border': getCssVar('border'),
    'disabled-border-color': getCssVar('border-color'),
    'disabled-input-fill': getCssVar('fill-color', 'light'),
    'disabled-icon-color': getCssVar('text-color-placeholder'),
    'disabled-checked-input-fill': getCssVar('border-color-extra-light'),
    'disabled-checked-input-border-color': getCssVar('border-color'),
    'disabled-checked-icon-color': getCssVar('text-color-placeholder'),
    'checked-text-color': getCssVar('color-primary'),
    'checked-input-border-color': getCssVar('color-primary'),
    'checked-bg-color': getCssVar('color-primary'),
    'checked-icon-color': getCssVar('color', 'white'),
    'input-border-color-hover': getCssVar('color-primary')
  ),
  $checkbox
);

$checkbox-button: () !default;
$checkbox-button: map.merge(
  (
    'checked-bg-color': getCssVar('color-primary'),
    'checked-text-color': getCssVar('color-white'),
    'checked-border-color': getCssVar('color-primary'),
    // 'disabled-bg-color': getCssVar('fill-color', 'darker'),
    'disabled-bg-color': getCssVar('disabled', 'bg-color'),
    'disabled-text-color': getCssVar('disabled', 'text-color'),
    'disabled-border-color': getCssVar('disabled', 'border-color')
  ),
  $checkbox-button
);

$checkbox-bordered-padding-left: () !default;
$checkbox-bordered-padding-left: map.merge(
  (
    'large': 12px,
    'default': 10px,
    'small': 8px
  ),
  $checkbox-bordered-padding-left
);

$checkbox-bordered-padding-right: () !default;
$checkbox-bordered-padding-right: map.merge(
  (
    'large': 20px,
    'default': 16px,
    'small': 12px
  ),
  $checkbox-bordered-padding-right
);

$tag: () !default;
$tag: map.merge(
  (
    'font-size': 12px,
    'border-radius': 4px,
    'border-radius-rounded': 9999px
  ),
  $tag
);

$tag-height: () !default;
$tag-height: map.merge(
  (
    'large': 32px,
    'default': 24px,
    'small': 20px
  ),
  $tag-height
);

$tag-padding: () !default;
$tag-padding: map.merge(
  (
    'large': 8px,
    'default': 6px,
    'small': 4px
  ),
  $tag-padding
);

$tag-icon-size: () !default;
$tag-icon-size: map.merge(
  (
    'large': 16px,
    'default': 14px,
    'small': 12px
  ),
  $tag-icon-size
);

$link: () !default;
$link: map.merge(
  (
    'font-size': getCssVar('font-size-base'),
    'font-weight': getCssVar('font-weight-primary'),
    'text-color': getCssVar('text-color-regular'),
    'hover-text-color': getCssVar('color-primary'),
    'disabled-text-color': getCssVar('text-color-placeholder')
  ),
  $link
);

$link-text-color: () !default;

@each $type in $types {
  $link-text-color: map.merge(
    $link-text-color,
    (
      $type: map.get($colors, $type, 'base')
    )
  ) !global;
}

$badge: () !default;
$badge: map.merge(
  (
    'bg-color': getCssVar('color-danger'),
    'radius': 10px,
    'font-size': 12px,
    'padding': 6px,
    'size': 18px
  ),
  $badge
);

$timeline: () !default;
$timeline: map.merge(
  (
    'dot-size-normal': 12px,
    'dot-size-large': 14px,
    'dot-color': getCssVar('border-color-light')
  ),
  $timeline
);

$alert: () !default;
$alert: map.merge(
  (
    'padding-column': 12px,
    'padding-row': 16px,
    'font-size': 14px,
    'radius': 4px,
    'close-font-size': 16px
  ),
  $alert
);

$message: () !default;
$message: map.merge(
  (
    'bg-color': getCssVar('color', 'info', 'light-9'),
    'border-color': getCssVar('border-color-lighter'),
    'padding': 11px 15px,
    'close-size': 16px,
    'close-icon-color': getCssVar('text-color-placeholder'),
    'close-hover-color': getCssVar('text-color-secondary')
  ),
  $message
);

$pagination: () !default;
$pagination: map.merge(
  (
    'text-color': getCssVar('text-color', 'primary'),
    'color': getCssVar('color', 'primary'),
    'num-margin': 3px,
    'default-size': 30px,
    'small-size': 20px,
    'bg-radius': 2px,
    'bg-padding': 6px 10px
  ),
  $pagination
);

$avatar: () !default;
$avatar: map.merge(
  (
    'square-radius': getCssVar('border-radius-base'),
    'circle-radius': getCssVar('border-radius-circle'),
    'font-size': getCssVar('font-size-small'),
    'icon-size-large': getCssVar('font-size-large'),
    'icon-size-small': getCssVar('font-size-extra-small')
  ),
  $avatar
);

$avatar-size: () !default;
$avatar-size: map.merge(
  (
    'large': 56px,
    'default': 40px,
    'small': 24px
  ),
  $avatar-size
);

$collapse: () !default;
$collapse: map.merge(
  (
    'font-size': getCssVar('font-size-small')
  ),
  $collapse
);

$collapse-item: () !default;
$collapse-item: map.merge(
  (
    'title-height': getCssVar('component-size-large'),
    'title-padding-right': 8px
  ),
  $collapse-item
);

$statistic: () !default;
$statistic: map.merge(
  (
    'title-color': getCssVar('text-color-regular'),
    'value-font-size': getCssVar('font-size-extra-large')
  ),
  $statistic
);

$tooltip: () !default;
$tooltip: map.merge((), $tooltip);

$popper: () !default;
$popper: map.merge((), $popper);

$select: () !default;
$select: map.merge(
  (
    'radius': getCssVar('border-radius', 'base'),
    'border': getCssVar('border-color'),
    'hover-border': getCssVar('border-color-hover'),
    'focus-border': getCssVar('color-primary'),
    'wrapper-border': getCssVar('border-color', 'darker'),
    'input-color': getCssVar('text-color-regular'),
    'placeholder-color': getCssVar('text-color-placeholder'),
    'selected-color': getCssVar('color-primary'),
    'disabled-bg-color': getCssVar('fill-color', 'light'),
    'disabled-text-color': getCssVar('text-color', 'disabled')
  ),
  $select
);

$option: () !default;
$option: map.merge(
  (
    'disabled-text-color': getCssVar('text-color', 'disabled'),
    'item-padding': 6px 12px,
    'item-color': getCssVar('text-color-regular'),
    'item-hover-bg': getCssVar('fill-color', 'light'),
    'selected-color': getCssVar('color-primary'),
    'popper-padding': 4px,
    'popper-height': 288px
  ),
  $option
);

$option-group: () !default;
$option-group: map.merge(
  (
    'padding': 4px 12px 6px 12px
  ),
  $option-group
);

$slider: () !default;
$slider: map.merge(
  (
    'height': 6px,
    'button-size': 20px,
    'button-offset': -7px,
    'track-bg-color': getCssVar('border-color-light'),
    'bar-bg-color': getCssVar('color-primary'),
    'radius': 10px
  ),
  $slider
);

$carousel: () !default;
$carousel: map.merge(
  (
    'indicator-bg': getCssVar('color-info-light-3'),
    'indicator-hover-bg': getCssVar('border-color-dark'),
    'indicator-item-padding': 10px 8px,
    'button-color': getCssVar('border-color-darker'),
    'button-hover': getCssVar('fill-color-light'),
    'button-size': 28px,
    'item-transition': transform getCssVar('transition-duration') ease-in-out
  ),
  $carousel
);

$carousel-indicator-size: () !default;
$carousel-indicator-size: map.merge(
  (
    'horizontal': (
      'width': 30px,
      'height': 2px
    ),
    'vertical': (
      'width': 2px,
      'height': 15px
    ),
    'circle': (
      'width': 15px,
      'height': 15px
    )
  ),
  $carousel-indicator-size
);

$color-picker-size: () !default;
$color-picker-size: map.merge(
  (
    'large': (
      'container': 32px,
      'fz': 14px
    ),
    'default': (
      'container': 26px,
      'fz': 13px
    ),
    'small': (
      'container': 20px,
      'fz': 12px
    )
  ),
  $color-picker-size
);

$popover: () !default;
$popover: map.merge(
  (
    'width': 160px
  ),
  $popover
);

$notification: () !default;
$notification: map.merge(
  (
    'width': 320px,
    'padding': 14px 20px,
    'border-radius': 6px,
    'box-shadow': getCssVar('box-shadow'),
    'text-color': getCssVar('text-color-regular')
  ),
  $notification
);

$card: () !default;
$card: map.merge(
  (
    'padding': 0 20px,
    'inner-padding': 18px 0,
    'txt-color': getCssVar('text-color-regular'),
    'bg-color': getCssVar('bg-color'),
    'box-shadow': getCssVar('box-shadow'),
    'border': 1px solid getCssVar('border-color'),
    'border-radius': getCssVar('border-radius-base')
  ),
  $card
);

$form: () !default;
$form: map.merge(
  (
    'padding': 0 20px,
    'inner-padding': 18px 0,
    'txt-color': getCssVar('text-color-regular'),
    'bg-color': getCssVar('bg-color'),
    'box-shadow': getCssVar('box-shadow'),
    'border': 1px solid getCssVar('border-color'),
    'border-radius': getCssVar('border-radius-base')
  ),
  $form
);

$formItem: () !default;
$formItem: map.merge(
  (
    'label-color': getCssVar('text-color-regular'),
    'margin': 16px,
    'error-color': getCssVar('color-danger')
  ),
  $formItem
);

$dialog: () !default;
$dialog: map.merge(
  (
    'width': 400px,
    'padding-vertical': 12px,
    'padding-horizonal': 18px,
    'bg-color': getCssVar('bg-color'),
    'shadow': getCssVar('box-shadow'),
    'border': 1px solid getCssVar('border-color'),
    'border-radius': getCssVar('border-radius-large')
  ),
  $dialog
);

$drawer: () !default;
$drawer: map.merge(
  (
    'width': 30%,
    'height': 24%,
    'padding-vertical': 20px,
    'padding-horizonal': 18px,
    'bg-color': getCssVar('bg-color'),
    'box-shadow': getCssVar('box-shadow')
  ),
  $drawer
);

$anchor: () !default;
$anchor: map.merge(
  (
    'font': 13px,
    'padding': 0 6px,
    'item-pl': 10px,
    'item-py': 6px,
    'marker-bg': getCssVar('color-primary'),
    'marker-radius': getCssVar('border-radius-base')
  ),
  $anchor
);

$menu: () !default;
$menu: map.merge(
  (
    'title-height': 40px,
    'item-padding': 0 15px 0 20px,
    'item-margin': 4px 0,
    'hover-bg': getCssVar('fill-color-dark'),
    'selected-bg': getCssVar('color-primary-light-9'),
    'selected-color': getCssVar('color-primary-light-3'),
    'text-color': getCssVar('text-color-primary'),
    'icon-size': 14px,
    'collapse-icon-size': 16px
  ),
  $menu
);

$breadcrumb: () !default;
$breadcrumb: map.merge(
  (
    'padding-separator': 0 5px,
    'text-color': getCssVar('text-color-primary'),
    'text-color-secondary': getCssVar('text-color-secondary'),
    'hover-color': getCssVar('color-primary')
  ),
  $breadcrumb
);

$dropdown: () !default;
$dropdown: map.merge(
  (
    'item-padding': 6px 12px,
    'item-radius': getCssVar('border-radius-small'),
    'hover-item-bg': getCssVar('fill-color', 'light'),
    'hover-item-color': getCssVar('text-color-regular'),
    'divided-color': getCssVar('border-color'),
    'disabled-color': getCssVar('disabled-text-color'),
    'disabled-bg-color': getCssVar('disabled-bg-color'),
    'popper-padding': 4px,
    'popper-radius': getCssVar('border-radius-large'),
    'selected-item-bg': getCssVar('color-primary-light-9'),
    'selected-item-color': getCssVar('color-primary'),
    'selected-hover-item-bg': getCssVar('color-primary-light-7')
  ),
  $dropdown
);

$picker: () !default;
$picker: map.merge((), $picker);

$time-picker: () !default;
$time-picker: map.merge(
  (
    'panel-height': 232px,
    'panel-list-width': 62px,
    'panel-inner-list-width': 52px,
    'panel-inner-list-height': 32px,
    'text-color': getCssVar('text-color-regular'),
    'cell-hover-bg': getCssVar('fill-color'),
    'cell-selected-bg': getCssVar('fill-color-darker'),
    'cell-selected-text-color': getCssVar('text-color-primary'),
    'cell-radius': getCssVar('border-radius-small'),
    'divider-color': getCssVar('border-color-lighter')
  ),
  $time-picker
);

$date-picker: () !default;
$date-picker: map.merge((), $date-picker);

$auto-complete: () !default;
$auto-complete: map.merge(
  (
    'popper-padding': 4px,
    'item-height': 32px,
    'item-radius': getCssVar('border-radius-base'),
    'item-hover-bg-color': getCssVar('fill-color', 'light'),
    'item-color': getCssVar('text-color-regular'),
    'item-disabled-color': getCssVar('text-color-placeholder'),
    'selected-color': getCssVar('color-primary')
  ),
  $auto-complete
);

$tree-select: () !default;
$tree-select: map.merge((), $tree-select);

$tree: () !default;
$tree: map.merge((), $tree);

$tabs: () !default;
$tabs: map.merge(
  (
    'text-color': getCssVar('text-color-primary'),
    'nav-btn-height': 24px,
    'nav-btn-height-horizontal': 30px,
    'nav-btn-padding': 8px,
    'nav-btn-margin': 26px,
    'nav-btn-padding-horizontal': 20px,
    'nav-btn-margin-horizontal': 14px,
    'nav-btn-color': getCssVar('color-primary'),
    'nav-border-color': getCssVar('border-color-lighter'),
    'nav-disabled-color': getCssVar('disabled-text-color'),
    'card-bg-color': getCssVar('fill-color-lighter'),
    'card-border-radius': getCssVar('border-radius-large'),
    'card-active-bg-color': getCssVar('fill-color-extra-light')
  ),
  $tabs
);

$tabs-popper: () !default;
$tabs-popper: map.merge(
  (
    'width': 130px,
    'max-height': 190px,
    'text-color': getCssVar('text-color-primary'),
    'hover-bg-color': getCssVar('fill-color'),
    'item-padding': 6px,
    'disabled-color': getCssVar('disabled-text-color')
  ),
  $tabs-popper
);

$segmented: () !default;
$segmented: map.merge(
  (
    'item-padding': 6px 8px,
    'text-color': getCssVar('text-color-secondary'),
    'hover-text-color': getCssVar('text-color-primary'),
    'bg-color': getCssVar('fill-color-lighter'),
    'disabled-color': getCssVar('text-color', 'disabled'),
    'selected-bg-color': getCssVar('fill-color'),
    'selected-box-bg-color': getCssVar('fill-color'),
    'actived-bg-color': getCssVar('fill-color-darker'),
    'radius': getCssVar('border-radius-base')
  ),
  $segmented
);

$progress: () !default;
$progress: map.merge(
  (
    'line-bg': getCssVar('border-color-lighter'),
    'line-radius': getCssVar('border-radius-round'),
    'text-color': getCssVar('text-color-regular'),
    'stroke-color': getCssVar('fill-color')
  ),
  $progress
);

$rate: () !default;
$rate: map.merge(
  (
    'star-color': getCssVar('color-primary'),
    'star-bg': getCssVar('fill-color'),
    'star-gap': 8px
  ),
  $rate
);

$table: () !default;
$table: map.merge((), $table);

$divider: () !default;
$divider: map.merge(
  (
    'margin': 16px 0,
    'margin-vertical': 0 8px,
    'line-color': getCssVar('border-color')
  ),
  $divider
);

$image-viewer: () !default;
$image-viewer: map.merge(
  (
    'text-color': getCssVar('text-color-regular'),
    'disabled-color': getCssVar('text-color-disabled'),
    'action-bg': getCssVar('bg-color'),
    'img-max-height': 70%
  ),
  $image-viewer
);

$skeleton: () !default;
$skeleton: map.merge(
  (
    'color': getCssVar('fill-color'),
    'to-color': getCssVar('fill-color', 'darker')
  ),
  $skeleton
);
