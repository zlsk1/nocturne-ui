@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'common/var' as *;

@include b(checkbox-button) {
  @include set-component-css-var('checkbox-button', $checkbox-button);
  height: map.get($checkbox-button-height, 'default');
  font-size: 14px;
  font-weight: getCssVar('checkbox-button', 'font-weight');
  color: getCssVar('text-color-primary');
  transition:
    opacity getCssVar('transition-duration-fast'),
    color getCssVar('transition-duration-fast'),
    border getCssVar('transition-duration-fast');

  &:hover {
    background: transparent;
    border-color: getCssVar('border-color');
  }

  @include when(checked) {
    color: getCssVar('checkbox-button', 'checked-bg-color');
    background: transparent;
    border-color: getCssVar('checkbox-button', 'checked-border-color');

    &:hover {
      opacity: 0.8;
    }
  }

  @include m(solid) {
    background: transparent;

    &.is-checked + .#{$namespace}-checkbox-button.is-checked {
      border-left-color: getCssVar('border-color');
    }

    @include when(checked) {
      color: getCssVar('checkbox-button', 'checked-text-color');
      background: getCssVar('checkbox-button', 'checked-bg-color');

      &:hover {
        opacity: 0.8;
      }
    }
  }

  @each $size in ('large', 'small') {
    @include m($size) {
      height: map.get($checkbox-button-height, $size);
    }
  }

  @include when(disabled) {
    color: getCssVar('checkbox-button', 'disabled-text-color');
    border-left-color: getCssVar('checkbox-button', 'disabled-border-color');
    border-right-color: getCssVar('checkbox-button', 'disabled-border-color');
    border-top-color: getCssVar('checkbox-button', 'disabled-border-color');
    border-bottom-color: getCssVar('checkbox-button', 'disabled-border-color');
    background: getCssVar('checkbox-button', 'disabled-bg-color');
    cursor: not-allowed;

    &:hover {
      color: getCssVar('checkbox-button', 'disabled-text-color');
      background: getCssVar('checkbox-button', 'disabled-bg-color');
    }

    @include when(checked) {
      border-left-color: transparent !important;
      &:hover {
        opacity: 1;
      }
    }
  }
}
