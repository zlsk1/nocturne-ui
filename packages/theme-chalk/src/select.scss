@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'mixins/function' as *;
@use 'common/var' as *;

$select-height: () !default;
$select-height: map.merge(
  (
    'large': ('height': 40px, 'font-size': 14px, 'padding': 0 14px),
    'default': ('height': 32px, 'font-size': 13px,'padding': 0 10px),
    'small': ('height': 24px, 'font-size': 12px, 'padding': 0 6px),
  ),
  $select-height
);

@include b(select) {
  @include set-component-css-var('select', $select);
}

@include b(select) {
  min-height: 32px;
  padding: 0 10px;
  font-size: 14px;
  border-radius: getCssVar('border-radius', 'base');
  border: 1px solid getCssVar('border-color');
  cursor: pointer;
  transition: all .3s linear;

  &:hover {
    border: 1px solid getCssVar('select', 'hover-border') 
  }

  @include when(focus) {
    outline: none;
    border: 1px solid getCssVar('select', 'focus-border') 
  }

  @include when(disabled) {
    color: getCssVar('select', 'disabled-text-color');
    background: getCssVar('select', 'disabled-bg-color');
    cursor: not-allowed;

    &:hover {
      border: 1px solid getCssVar('border-color');
    }
  }

  @include e(wrapper) {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: 32px;
    color: getCssVar('border-color', 'darker');

    @include when(multiple) {
      padding-left: 0px;
    }
  }

  .#{$namespace}-select__input-wrapper {
    position: relative;
    width: 100%;

    @include e(input) {
      max-width: 100%;
      border: none;
      outline: none;
      padding: 0;
      font-size: inherit;
      font-family: inherit;
      appearance: none;
      background-color: transparent;
      cursor: pointer;
    }

    @include e(placeholder) {
      position: absolute;
      top: 50%;
      left: 0;
      width: 100%;
      transform: translateY(-50%);
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      user-select: none;

      @include when(selecting) {
        color: getCssVar('text-color-regular');
      }

      @include when(disabled) {
        color: getCssVar('select', 'disabled-text-color');
      }
    }
  }

  @include e(tag) {
    margin: 3px 4px;
  }

  @include e(icon) {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    font-size: 18px;
  }
  
  @each $size in (large, small) {
    @include m($size) {
      @include set-css-var-value(('select', 'height'),
        map.get($select-height, $size, 'height'));
      @include set-css-var-value(('select', 'font-size'),
        map.get($select-height, $size, 'font-size'));
      @include set-css-var-value(('select', 'padding'),
        map.get($select-height, $size, 'padding'));

      min-height: getCssVar('select', 'height');
      padding: getCssVar('select', 'padding');
      font-size: getCssVar('select', 'font-size');

      @include e(wrapper) {
        min-height: getCssVar('select', 'height');
      }
    }
  }
}

.#{$namespace}-select__popper {
  padding: 4px 0 !important;
}
  