@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/var' as *;
@use 'mixins/function' as *;
@use 'common/var' as *;

$select-height: () !default;
$select-height: map.merge(
  (
    'large': (
      'height': 40px,
      'font-size': 14px,
      'padding': 0 14px
    ),
    'default': (
      'height': 32px,
      'font-size': 13px,
      'padding': 0 10px
    ),
    'small': (
      'height': 24px,
      'font-size': 12px,
      'padding': 0 6px
    )
  ),
  $select-height
);

@mixin tags {
  @include e(tags) {
    display: flex;
    flex-wrap: wrap;

    @include e(tag) {
      margin: 3px 4px;
      cursor: pointer;
    }
  }
}

@include b(select) {
  @include set-component-css-var('select', $select);
}

@include b(select) {
  min-height: 32px;
  padding: 0 10px;
  font-size: 14px;
  border-radius: getCssVar('select', 'radius');
  border: 1px solid getCssVar('select', 'border');
  cursor: pointer;
  transition: all getCssVar('transition-duration') linear;

  &:hover {
    border: 1px solid getCssVar('select', 'hover-border');
  }

  @include when(focus) {
    outline: none;
    border: 1px solid getCssVar('select', 'focus-border');
  }

  @include when(disabled) {
    color: getCssVar('select', 'disabled-text-color');
    background: getCssVar('select', 'disabled-bg-color');
    user-select: none;
    cursor: not-allowed !important;

    &:hover {
      border: 1px solid getCssVar('select', 'border');
    }

    @include e(value) {
      color: getCssVar('select', 'disabled-text-color');
    }

    @include e(suffix) {
      color: getCssVar('select', 'disabled-text-color');
      cursor: not-allowed;
      &:hover {
        color: getCssVar('select', 'disabled-text-color');
      }
    }

    @include e(prefix) {
      color: getCssVar('select', 'disabled-text-color');
    }

    @include e(tags) {
      @include e(tag) {
        cursor: not-allowed;
      }
    }

    @include e(input) {
      cursor: not-allowed !important;
    }
  }

  @include e(wrapper) {
    display: flex;
    align-items: center;
    justify-content: space-between;
    word-break: break-all;
    min-height: 32px;
    color: getCssVar('text-color-regular');

    @include when(multiple) {
      padding-left: 0px;

      @include e(value) {
        margin-right: 0;
      }
    }
  }

  @include e(content) {
    position: relative;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    flex: 1;
    min-width: 0;
    min-height: 32px;
  }

  @include e(input--wrapper) {
    display: flex;
    flex: 1;
    flex-wrap: wrap;
    max-width: 100%;
    user-select: none;
  }

  @include tags;

  @include e(input) {
    max-width: 100%;
    padding: 0;
    color: getCssVar('select', 'input-color');
    font-family: inherit;
    border: none;
    outline: none;
    appearance: none;
    background-color: transparent;
    cursor: pointer;

    @include when(disabled) {
      cursor: not-allowed;
    }
  }

  @include e(input-text) {
    position: absolute;
    top: 50%;
    z-index: 100;
    white-space: pre;
    visibility: hidden;
    transform: translateY(-50%);
  }

  @include m(value) {
    display: block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    user-select: none;

    @include when(placeholder) {
      color: getCssVar('select', 'placeholder-color');
    }
  }

  @include when(selecting) {
    .#{$namespace}-select--value {
      color: getCssVar('text-color-secondary');
    }
  }

  @include when(filterable) {
    cursor: text;

    @include e(input) {
      position: absolute;
      inset: 0;
      cursor: text;
    }
  }

  @include when(multiple) {
    @include e(input) {
      position: initial;
      cursor: text;
    }
  }

  @include e(suffix) {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    font-size: 18px;
    transition: all getCssVar('transition-duration');
    cursor: pointer;

    &:hover {
      color: getCssVar('text-color-value');
    }
  }

  @each $size in (large, small) {
    @include m($size) {
      @include set-css-var-value(
        ('select', 'height'),
        map.get($select-height, $size, 'height')
      );
      @include set-css-var-value(
        ('select', 'font-size'),
        map.get($select-height, $size, 'font-size')
      );
      @include set-css-var-value(
        ('select', 'padding'),
        map.get($select-height, $size, 'padding')
      );

      min-height: getCssVar('select', 'height');
      padding: getCssVar('select', 'padding');
      font-size: getCssVar('select', 'font-size');

      @include e(wrapper) {
        min-height: getCssVar('select', 'height');
      }
    }
  }

  @include when(selected) {
    color: getCssVar('select', 'selected-color');
  }

  @include e(prefix) {
    margin-right: 6px;
  }

  @include m(loading) {
    animation: rotate 1s linear infinite;
    @keyframes rotate {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    }
  }
}

.#{$namespace}-select__popper {
  @include set-component-css-var('select', $select);
  .empty-value {
    display: block;
    padding: 4px 0;
    text-align: center;
    color: getCssVar('select', 'input-color');
  }
}

.#{$namespace}-select--tags__popper {
  max-width: 400px;

  @include tags;
}
